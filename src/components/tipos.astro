---
const { _id, tipos } = Astro.props;
---

<div
  class="hidden w-full h-auto pb-10"
  id={`lista-de-tipos-${_id}`}
  data-tipos={JSON.stringify(tipos)}>
  <ul class="w-full flex flex-col gap-2 items-center justify-center">
    <li class="w-full flex items-center justify-end p-1">
      <button
        data-id={_id}
        type="button"
        id="btn-form-branch-vista-open"
        class="p-2">
        <img
          src="/plus.svg"
          class="h-[25px] w-[25px]"
          alt="plus"
        />
      </button>
    </li>
    {
      tipos.length > 0 &&
        tipos.map((m) => {
          return (
            <li
              id={m}
              class={`p-1 gap-x-2 w-full flex items-center justify-between tipos-server-${_id} border border-gray-500 bg-gray-300`}>
              <p class="ps-2 h-full w-full flex items-center text-[16px]">{m.name}</p>
              <button
                id={`remove-branch-${_id}-${m.name}`}
                class="flex items-center justify-center p-2"
                type="button">
                <img
                  src="/xmark_black.svg"
                  class="h-[25px] w-[25px] md:h-[16px] md:w-[16px] fill-black"
                  alt="delete"
                />
              </button>
            </li>
          );
        })
    }
  </ul>
</div>

<script>
  import { removeBranch } from "../apis/firebase.js";
import { CartelSuccess } from "./carteles/funciones.js";

  const btn_open = document.querySelectorAll("#btn-form-branch-vista-open");
  const form_add_branch = document.getElementById("form-add-branch");

  const lista_server = document.getElementById("lista_server");
  const ids = [...lista_server?.children].map((n) => n.id);

  let btn_remove_branch = [];

  ids.map((n) => {
    const auxList = document.getElementById("lista-de-tipos-" + n);
    const newTipos = JSON.parse(auxList.dataset.tipos);

    newTipos.map((m) => {
      btn_remove_branch.push({
        tipo: m,
        id: n,
        element: document.getElementById("remove-branch-" + n + "-" + m.name),
      });
    });
  });

  btn_remove_branch.forEach((n) => {
    n.element.addEventListener("click", async () => {
      await removeBranch(n.tipo.name, n.id);
      CartelSuccess("delete with good");
    });
  });

  btn_open.forEach((n: HTMLElement) => {
    n.addEventListener("click", () => {
      form_add_branch.dataset.id_element = n?.dataset?.id;
      form_add_branch.classList.remove("hidden");
      form_add_branch.classList.add("flex");
    });
  });
</script>
